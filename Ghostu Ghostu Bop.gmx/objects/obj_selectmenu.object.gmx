<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_menu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pause the game (hopefully)
instance_deactivate_all(true);


event_inherited()
x = ((room_width*.5)-(room_width*.25/2))
y = ((room_height*.5)-(room_height*.25/2))

//Since we're changing y, we need to calculate our own 
menuEntryStartY = y+.25*menuSpace
 
width = 175
height = 75  

numEntries = 2
visibleEntries = 2

for(var i = 0; i &lt; numEntries; i++){
    menuEntry[i] = instance_create(x+width*.25,menuEntryStartY+i*menuSpace,obj_menuentry)
}

menuEntry[0].txt = 'Quit Game'
menuEntry[0].script = scr_end_game

//WHAT THE FUUUUUUCK! I think this is broken because of bad parenting.
menuEntry[1].txt = 'Back'
menuEntry[1].script = scr_back



 
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/* Only draw if we have entries and are inFocus */
if(inFocus &amp;&amp; numEntries &gt; 0){
       
/* This sets the text help box. Note that if it's empty, or we're not in battle
        this does nothing */

//draw the help text

    if(instance_exists(obj_battle_help_box))
        {
            obj_battle_help_box.text = menuEntry[entrySelected].battleHelpText
        }
        

    if(keyboard_check_pressed(vk_up))
    {
        entrySelected -= 1;
        audio_play_sound(snd_select,10,0)
    }
    if(keyboard_check_pressed(vk_down)) 
    {
        entrySelected += 1;
        audio_play_sound(snd_select,10,0)
    }
   
    //This handles wraparound
    if(entrySelected &lt; 0)
        entrySelected = numEntries-1
        //Technically this should do it alone, but GameMaker doesn't
        //handle modulus of negative numbers properly
    entrySelected = entrySelected mod numEntries
    
    arrowy = menuEntry[entrySelected].y + .5*menuSpace + 3
    arrowx = x+width*.185
    
        if(keyboard_check_pressed(vk_enter))
    {
            /*Hard coded*/
            if(entrySelected = 0)
                scr_end_game()
            else{
                instance_activate_all()
                instance_destroy()
            }
    }
    
        
}
if(keyboard_check_pressed(vk_escape))
    { 
                instance_activate_all()
                instance_destroy()
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
