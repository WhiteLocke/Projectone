<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_noname_back</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//we gotta make the room this bitch is in persistent so progress will be saved
room_persistent = true

charSpeed = 8 //Make sure this isn't more than 31, or we might clip over collisions
spriteFudge = 5
paused = false

//I want to try random battles while moving only
moving = false
//this for areas where battles are possible
randomArea = true
//this for randomizing the chances of battle
battlenum = 100

facing = vk_down
// Set the initial depth to just below the default tile depth
depth = DEPTH_DEFAULT-1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(!paused &amp;&amp; x mod TILE_WIDTH == 0 &amp;&amp; y mod TILE_HEIGHT == 0){
    speed = 0
    if(keyboard_check_direct(vk_up))
    {
        facing = vk_up
        sprite_index = spr_noname_back
        //check for a collision tile
        if(!tile_layer_find(DEPTH_COLLISION, x, y-TILE_HEIGHT) and tile_free(x,y-TILE_HEIGHT))
        {
            
            move_towards_point(x,y-TILE_HEIGHT,charSpeed)
            moving = true
            
        }
        
    }
    
    
    if(keyboard_check_direct(vk_down))
    {
        facing = vk_down
        sprite_index = spr_noname_front
        if(!tile_layer_find(DEPTH_COLLISION, x, y+TILE_HEIGHT) and tile_free(x,y+TILE_HEIGHT))
        {
            
            move_towards_point(x,y+TILE_HEIGHT,charSpeed)
            moving = true
        }
        
    }
    
    
    if(keyboard_check_direct(vk_left))
    {
        sprite_index = spr_noname_run
        image_xscale = 1
        image_speed = .25
        facing = vk_left
        if(!tile_layer_find(DEPTH_COLLISION, x-TILE_WIDTH, y) and tile_free(x-TILE_WIDTH,y))
        {
            
            move_towards_point(x-TILE_WIDTH,y,charSpeed)
            moving = true
        }
        
    }
   
            
    if(keyboard_check_direct(vk_right))
    {
        sprite_index = spr_noname_run
        image_xscale = -1
        image_speed = .25
        facing = vk_right
        if(!tile_layer_find(DEPTH_COLLISION, x+TILE_WIDTH, y) and tile_free(x+TILE_WIDTH,y))
        {
            
            move_towards_point(x+TILE_WIDTH,y,charSpeed)
            moving = true
        }
        
    }
    
}

    if(keyboard_check_direct(vk_lshift))
        paused = true
    if(keyboard_check_direct(vk_rshift)){
        io_clear()
        paused = false
    }
if (speed = 0) moving = false
    
//random battle
randomize()
if (randomArea = true &amp;&amp; moving = true) battlenum = irandom(1000)

//just arbitrarily chose a range of numbers that would activate a battle.
//this could be one number out of a hundred or whatever the fuck
//this next if statement is all you need to comment out if you want to debug collisions

if (battlenum &lt;= 25)
    {
    battlenum = 100
    speed = 0
    instance_create(0,0,obj_whitefade)
    }
    
if (!moving &amp;&amp; facing = vk_left){
    sprite_index = spr_noname_idle
    image_xscale = 1
    }

if (!moving &amp;&amp; facing = vk_right){
    sprite_index = spr_noname_idle
    image_xscale = -1
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
